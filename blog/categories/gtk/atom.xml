<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gtk | LordAmit's Blog]]></title>
  <link href="http://lordamit.github.io/blog/categories/gtk/atom.xml" rel="self"/>
  <link href="http://lordamit.github.io/"/>
  <updated>2016-04-14T18:53:34+06:00</updated>
  <id>http://lordamit.github.io/</id>
  <author>
    <name><![CDATA[Amit Seal Ami]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using GTK, Glade and Codeblocks Together in Ubuntu - Level Beginner]]></title>
    <link href="http://lordamit.github.io/blog/2016/03/25/using-gtk/"/>
    <updated>2016-03-25T02:41:03+06:00</updated>
    <id>http://lordamit.github.io/blog/2016/03/25/using-gtk</id>
    <content type="html"><![CDATA[<p>Looks like you need to do a lot of things to properly set an environment where you can peacefully create UI files using Glade which uses GTK-3.0 version in the backend while using CodeBlocks!</p>

<p>The major steps for <strong>setting up environment</strong> are :<a name="tocForGtk"></a></p>

<ol>
<li><a href="#latestCodeBlocks">Install latest stable version of CodeBlocks (for me, 16.01)</a></li>
<li><a href="#latestGtkLibraries">Install GTK-3.0 related libraries</a></li>
<li><a href="#modifyScripts">Modify the Template Script in CodeBlocks</a></li>
<li><a href="#installingGlade">Install Glade</a></li>
</ol>


<p>The major steps for creating an UI are:</p>

<ol>
<li><a href="#designUsingGlade">Create design using Glade</a></li>
<li><a href="#cCodeExample">Connect it to a C code</a></li>
</ol>


<!-- more -->


<h2>Latest CodeBlocks! <a name="latestCodeBlocks"></a></h2>

<pre><code class="bash Installing CodeBlocks from PPA">sudo apt-add-repository ppa:damien-moore/codeblocks-stable
sudo apt-get update
sudo apt-get install codeblocks
</code></pre>

<h2>GTK-3.0 Libraries! <a name="latestGtkLibraries"></a><a href="#tocForGtk">&#8593;</a></h2>

<pre><code class="bash Installing GTK-3.0 libraries">sudo apt-get install libgtk3.0-dev
sudo apt-get install libgtk3.0-cil libgtk3.0-cil-dev
</code></pre>

<h2>Modify Template Script in CodeBlocks <a name="modifyScripts"></a><a href="#tocForGtk">&#8593;</a></h2>

<p>This is the tricky part. You see, the CodeBlocks still uses GTK+-2.0 libraries by default for the GTK+ projects in its template. You need to edit the template file and modify the parts where it will reference the GTK-3.0 libraries instead of the libraries from version 2.</p>

<p>start with this command:
<code>bash Use pkg-config to check versions
pkg-config --cflags --libs gtk+-3.0
</code>
See the output? It is showing the necessary files you need to successfully build a gtk based app.
For me, it is:</p>

<pre><code class="bash">-pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircommon -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
</code></pre>

<p>Now, Open CodeBlocks. Right click on <code>New &gt; Project &gt; GTK+ Project</code>, <code>edit this script</code>. It may throw an error saying it can not find the file, making it in read-only mode. Hence, go to <code>~/.local/share/codeblocks/templates/wizard/gtk</code> and open the <code>wizard.script</code>.
Replace the version values with the values you found from the <code>pkg-config</code> part. For example,<br/>
<code>c modifying versions from wizard.script file - before change
if (!VerifyFile(dir_nomacro_inc + wxFILE_SEP_PATH + _T("gtk-2.0")
</code>
will become</p>

<pre><code class="c modifying versions from wizard.script file - after change">if (!VerifyFile(dir_nomacro_inc + wxFILE_SEP_PATH + _T("gtk-3.0")
</code></pre>

<p>In case you are clueless, you can take a look at my <a href="https://gist.github.com/lordamit/fc2b608f15047d9f672e">wizard.script</a>.</p>

<h2>Installing Glade <a name="installingGlade"></a> <a href="#tocForGtk">&#8593;</a></h2>

<pre><code class="bash">sudo apt-get install glade
</code></pre>

<h2>Create Design Using Glade <a name="designUsingGlade"></a><a href="#tocForGtk">&#8593;</a></h2>

<p>Open glade, drag and drop a <code>Window</code> top-level container. Add some more things if you want inside it. From the properties pane at the right side, go to <code>general</code> tab, and write <code>mywindow</code> in the ID.</p>

<p>The key things to remember here are:</p>

<ol>
<li>You got to have a Window ID, and it must be used in the C code</li>
<li>You have to save it in GtkBuilder format (<code>file &gt; save as</code>)</li>
</ol>


<h2>C code example <a name="cCodeExample"></a><a href="#tocForGtk">&#8593;</a></h2>

<pre><code class="c C Code that includes a testGlade.glade file for designing UI">#include&lt;gtk/gtk.h&gt;

int main(int argc, char *argv[]){
    GtkBuilder *gtkBuilder;
    GtkWidget *window;

    gtk_init(&amp;argc, &amp;argv);

    gtkBuilder = gtk_builder_new();
    gtk_builder_add_from_file(gtkBuilder, "testGlade.glade", NULL);
    window = GTK_WIDGET(gtk_builder_get_object(gtkBuilder, "mywindow"));

    g_object_unref(G_OBJECT(gtkBuilder));
    gtk_widget_show(window);
    gtk_main();

    return 0;
}
</code></pre>

<p>Compile and run.  Comment below if this works for you or if you got a feedback! share your screen shot of what you built :)</p>
]]></content>
  </entry>
  
</feed>
